name: Unity Build

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  linux-build:
    runs-on: ubuntu-latest
    env:
      UNITY_VERSION: 6000.0.44f1
      HASH: 101c91f3a8fb
      UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
      UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
      CACHE_DIR: $HOME/.cache/unity
      INSTALLER_PATH: $HOME/.cache/unity/Unity-6000.0.44f1.tar.xz
      BASE_URL: https://download.unity3d.com/download_unity

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Prepare cache directory
        run: mkdir -p ~/.cache/unity

      - name: Cache Unity installation
        uses: actions/cache@v3
        with:
          path: ~/.cache/unity
          key: ${{ runner.os }}-unity-${{ env.UNITY_VERSION }}

      - name: Download Unity Installer
        run: |
          set -e

          echo "ðŸ“… Downloading Unity Editor"

          if [ ! -f "${{ env.INSTALLER_PATH }}" ]; then
            wget -O "${{ env.INSTALLER_PATH }}" "${{ env.BASE_URL }}/${{ env.HASH }}/LinuxEditorInstaller/Unity-${{ env.UNITY_VERSION }}.tar.xz"
          else
            echo "âœ… Found Unity installer in cache."
          fi

          sudo mkdir -p /opt/unity
          sudo tar -xJf "${{ env.INSTALLER_PATH }}" -C /opt/unity
          echo "âœ… Unity installed to /opt/unity"

      - name: Activate Unity License (Pro)
        run: |
          /opt/unity/Editor/Unity \
            -batchmode -nographics -quit \
            -logFile - \
            -serial "$UNITY_LICENSE" \
            -username "$UNITY_EMAIL" \
            -password "$UNITY_PASSWORD"

      - name: Build Project for Linux
        run: |
          /opt/unity/Editor/Unity -batchmode -nographics -quit \
            -projectPath Test/QualityBuddyDev \
            -buildTarget StandaloneLinux64 \
            -buildLinux64Player Test/QualityBuddyDev/build/Linux/QualityBuddy.x86_64 \
            -logFile /dev/stdout

      - name: Upload Linux Build
        uses: actions/upload-artifact@v4
        with:
          name: QualityBuddy-Linux
          path: |
            Test/QualityBuddyDev/build/Linux/QualityBuddy.x86_64
            Test/QualityBuddyDev/build/Linux/UnityPlayer.so
            Test/QualityBuddyDev/build/Linux/QualityBuddy_Data/**
            Test/QualityBuddyDev/build/Linux/libdecor-0.so.0
            Test/QualityBuddyDev/build/Linux/libdecor-cairo.so

      - name: Deactivate Unity License
        if: always()
        run: |
          /opt/unity/Editor/Unity -batchmode -nographics -returnlicense -logFile /dev/stdout || true

  build-windows:
    runs-on: windows-latest
    env:
      UNITY_VERSION: 6000.0.44f1
      HASH: 101c91f3a8fb
      UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
      UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
      BASE_URL: https://download.unity3d.com/download_unity
      INSTALLER_PATH: C:\\Unity\\UnitySetup64.exe

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download Unity Installer
        run: |
          $ErrorActionPreference = "Stop"

          New-Item -ItemType Directory -Force -Path "C:\Unity" | Out-Null

          if (-Not (Test-Path "${env:INSTALLER_PATH}")) {
            Write-Host "Downloading ${env:BASE_URL}/${env:HASH}/Windows64EditorInstaller/UnitySetup64.exe"
            Invoke-WebRequest "${env:BASE_URL}/${env:HASH}/Windows64EditorInstaller/UnitySetup64.exe" -OutFile "${env:INSTALLER_PATH}"
          } else {
            Write-Host "âœ… Found Unity installer in cache."
          }

      - name: Install Unity
        run: |
          Start-Process -FilePath "${env:INSTALLER_PATH}" -ArgumentList "/S /D=C:\\Unity\\Editor" -Wait

      - name: Add Unity to PATH
        run: echo "C:\\Unity\\Editor" | Out-File -Append $env:GITHUB_PATH

      - name: Activate Unity License (Pro)
        run: |
          Unity.exe \
            -batchmode -nographics -quit \
            -logFile - \
            -serial "$env:UNITY_LICENSE" \
            -username "$env:UNITY_EMAIL" \
            -password "$env:UNITY_PASSWORD"

      - name: Build Project for Windows
        run: |
          Unity.exe -batchmode -nographics -quit \
            -projectPath Test/QualityBuddyDev \
            -buildTarget StandaloneWindows64 \
            -buildWindows64Player Test/QualityBuddyDev/build/Windows/QualityBuddy.exe \
            -logFile -

      - name: Upload Windows Build
        uses: actions/upload-artifact@v4
        with:
          name: QualityBuddy-Windows
          path: |
            Test/QualityBuddyDev/build/Windows/QualityBuddy.exe
            Test/QualityBuddyDev/build/Windows/UnityPlayer.dll
            Test/QualityBuddyDev/build/Windows/QualityBuddy_Data/**

      - name: Deactivate Unity License
        if: always()
        run: |
          Unity.exe -batchmode -nographics -returnlicense -logFile - || true
