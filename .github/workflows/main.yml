name: Unity Build

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      UNITY_VERSION: 6000.0.3f1
      UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
      UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Cache Unity installation
        uses: actions/cache@v3
        with:
          path: ~/.cache/unity
          key: ${{ runner.os }}-unity-${{ env.UNITY_VERSION }}

      - name: Get Unity Download Hash
        id: unity_hash
        run: |
          
          JSON_URL="https://public-cdn.cloud.unity3d.com/hub/prod/releases-linux.json"

          HASH=$(curl -s $JSON_URL | jq -r --arg ver "$UNITY_VERSION" '.official[] | select(.version == $ver) | .downloadUrl' | sed 's|.*download_unity/||;s|/.*||')

          echo "hash=$HASH" >> $GITHUB_OUTPUT

      - name: Download Unity Installer
        run: |
          HASH=${{ steps.unity_hash.outputs.hash }}
          INSTALLER_PATH="$HOME/.cache/unity/Unity-${UNITY_VERSION}.tar.xz"

          if [ ! -f "$INSTALLER_PATH" ]; then
            URL="https://download.unity3d.com/download_unity/${HASH}/LinuxEditorInstaller/Unity-${UNITY_VERSION}.tar.xz"
            echo "ðŸ“¥ Downloading: $URL"
            wget "$URL" -O "$INSTALLER_PATH"
          else
            echo "âœ… Found Unity installer in cache."
          fi

          sudo mkdir -p /opt/unity
          sudo tar -xJf "$INSTALLER_PATH" -C /opt/unity
          echo "âœ… Unity installed to /opt/unity"

      - name: Activate Unity License (Pro)
        run: |
          /opt/unity/Editor/Unity \
            -batchmode -nographics -quit \
            -logFile - \
            -serial "$UNITY_LICENSE" \
            -username "$UNITY_EMAIL" \
            -password "$UNITY_PASSWORD"
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

      - name: Build Project
        run: |
          /opt/unity/Editor/Unity -batchmode -nographics -quit \
            -projectPath Test/QualityBuddyDev \
            -buildWindows64Player "build/windows/Game.exe" \
            -buildLinux64Player "build/linux/Game.x86_64" \
            -logFile /dev/stdout

      - name: Deactivate Unity License
        if: always()
        run: |
          /opt/unity/Editor/Unity -batchmode -nographics -returnlicense -logFile /dev/stdout || true
